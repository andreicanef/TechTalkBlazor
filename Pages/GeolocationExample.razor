@page "/geolocation"
@using BrowserInterop.Extensions;
@using BrowserInterop.Geolocation;
@inject IJSRuntime jsRuntime
@inject HttpClient httpClient

<h1>GeolocationExample</h1>



@if (currentPosition != null && currentPosition.Location != null)
{
    <div>
        Current position :
        <ul>
            <li>Latitude : @currentPosition.Location.Coords.Latitude</li>
            <li>Longitude : @currentPosition.Location.Coords.Longitude </li>
        </ul>
    </div>
}
else
{
    <div>please click the button, and then 'allow' on the browser popup, to enable this feature. </div>
}

<button type="button" @onclick="GetGeolocation">Get Current Position</button>


@if (userForecast != null)
{
<div class="card">

    <h2>@userForecast.City</h2>
    <h3>@userForecast.WeatherInformation.Description</h3>
    <h3>@userForecast.TemperatureC°</h3>
    <img src="@userForecast.WeatherInformation.Icon" />
</div>
}
else
{
    <p>no weather data retrieved. please press the button.</p>
}

@code {

    private WindowNavigatorGeolocation geolocationWrapper;
    private GeolocationResult currentPosition;
    private WeatherForecast[] forecasts;
    private WeatherForecast userForecast;

    protected override async Task OnInitializedAsync()
    {
        var window = await jsRuntime.Window();
        var navigator = await window.Navigator();
        geolocationWrapper = navigator.Geolocation;
        forecasts = await httpClient.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public async Task GetGeolocation()
    {
        currentPosition = (await geolocationWrapper.GetCurrentPosition(new PositionOptions()
        {
            EnableHighAccuracy = true,
            MaximumAgeTimeSpan = TimeSpan.FromHours(1),
            TimeoutTimeSpan = TimeSpan.FromMinutes(1)
        }));

        if (forecasts.Any())
        {
            userForecast = forecasts.OrderBy(x => Guid.NewGuid()).First();
        }

    }

    public class WeatherForecast
    {
        public string City { get; set; }

        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public WeatherInfo WeatherInformation { get; set; }


    }


    public class WeatherInfo
    {
        public string Icon { get; set; }
        public string Description { get; set; }
    }
}
